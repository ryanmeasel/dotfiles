## Path
# ZSH automatically launches into a tmux session on launch
export ZSH_TMUX_AUTOSTART=false

# Golang environment
export GOPATH=$HOME/Developer/sandbox/gocode
export GOROOT=/usr/local/go

# Android environment on OS X
export ANDROID_PATH="/usr/local/Cellar/android-platform-tools/22.0.0/bin/:/Users/ryan/bin:/Users/ryan/Library/Android/sdk/build-tools/22.0.1/"

# Main path
export PATH=$GOROOT/bin:$GOPATH:"/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/texbin:/Users/ryan/bin":$ANDROID_PATH


## ZSH Packages
source $HOME/.antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh

# Bundles from the default repo (robbyrussell's oh-my-zsh).
antigen bundle git
antigen bundle git-extras
antigen bundle git-flow
antigen bundle pip
antigen bundle jsontools
antigen bundle command-not-found
antigen bundle fasd
antigen bundle tmux
antigen bundle common-aliases
antigen bundle aws
antigen bundle atom
antigen bundle docker
antigen bundle node
antigen bundle npm
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-history-substring-search ./zsh-history-substring-search.zsh

# OS X  packages
if [[ $(uname) == 'darwin' ]]; then
    antigen bundle brew
    antigen bundle brew-cask
    antigen bundle osx
fi

# Install the Pure theme
antigen bundle mafredri/zsh-async
antigen bundle sindresorhus/pure

# Apply the packages and theme
antigen apply


## Functions
# Make a directory and cd into it
mkcd() {
    mkdir -p "$@"
    cd "$_";
}

# Docker image to clean up

## Aliases
# Remove all untagged docker images
alias diclean='docker rmi $(docker images -f "dangling=true" -q)'
# Remove all stopped docker containers
alias dcclean='docker rm $(docker ps -a -q)'
# Deploy an elastic beanstalk application locally
alias ebRunLocal='eb local run --envvars AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY'
# Rebuild the Launch Services databse on OS X
alias rebuildLaunchServices='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/ lsregister -kill -r -domain local -domain user'



## Miscellaenous
# Initialize fasd
eval "$(fasd --init auto)"

# Load AWS credentials
if [[ -e $HOME/.aws/exportCredentials.sh ]]; then
    source $HOME/.aws/exportCredentials.sh
else
    echo "WARNING: No AWS credentials found."
fi

## OS specific

if [[ $(uname) == 'darwin' ]]; then
    # Load dnvm for mono (omnisharp compatibility in Atom)
    [ -s "/Users/ryan/.dnx/dnvm/dnvm.sh" ] && . "/Users/ryan/.dnx/dnvm/dnvm.sh"
fi
